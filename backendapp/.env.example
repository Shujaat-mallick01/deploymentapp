# ============================================
# DEPLOYMENT PLATFORM ENVIRONMENT VARIABLES
# ============================================
# See ENV_SETUP_GUIDE.md for detailed instructions on obtaining these values

# --------------------------------------------
# SERVER CONFIGURATION
# --------------------------------------------
# The port your backend server runs on (default: 3000)
PORT=3000

# Environment: development | production | test
NODE_ENV=development

# --------------------------------------------
# JWT AUTHENTICATION
# --------------------------------------------
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# REQUIRED - Must be at least 32 characters
JWT_SECRET=your-secret-key-change-in-production

# Token expiration: 30m, 1h, 7d, 30d, 1y
JWT_EXPIRES_IN=7d

# --------------------------------------------
# GITHUB OAUTH (OPTIONAL but recommended)
# --------------------------------------------
# Get from: https://github.com/settings/developers → New OAuth App
# Client ID from your GitHub OAuth app
GITHUB_CLIENT_ID=Ov23lizc4ktWgvwlaNMR

# Client Secret (generate new secret in OAuth app settings)
GITHUB_CLIENT_SECRET=8827538648c6095677e9bcb2ab0957ba6ddcc38f

# Must match the callback URL in GitHub OAuth settings
GITHUB_CALLBACK_URL=http://localhost:3000/api/auth/github/callback

# --------------------------------------------
# FRONTEND CONFIGURATION
# --------------------------------------------
# Your frontend URL (for CORS and redirects)
# Development: http://localhost:3001
# Production: https://yourdomain.com
FRONTEND_URL=http://localhost:3001

# --------------------------------------------
# WEBHOOK CONFIGURATION
# --------------------------------------------
# Generate with: openssl rand -hex 32
# Used to verify GitHub webhook signatures
WEBHOOK_SECRET=your-webhook-secret

# Your webhook endpoint URL
# Development: Use ngrok (e.g., https://abc123.ngrok.io/api/git/webhook)
# Production: https://yourdomain.com/api/git/webhook
WEBHOOK_URL=https://localhost:3000/api/git/webhook

# --------------------------------------------
# REDIS CONFIGURATION (REQUIRED for build queue)
# --------------------------------------------
# Install Redis: https://redis.io/download
# Windows: Use WSL2 or Docker
# Mac: brew install redis
# Linux: apt install redis-server
REDIS_HOST=localhost
REDIS_PORT=6379

# --------------------------------------------
# MONGODB CONFIGURATION (REQUIRED)
# --------------------------------------------
# Option 1: MongoDB Atlas (FREE): https://www.mongodb.com/cloud/atlas
# Format: mongodb+srv://username:password@cluster.xxxxx.mongodb.net/dbname
# Option 2: Local MongoDB: mongodb://localhost:27017/deployment-platform
MONGODB_URI=mongodb://localhost:27017/deployment-platform

# --------------------------------------------
# FILE STORAGE PATHS
# --------------------------------------------
# Local directories for storing repos and builds
# Will be created automatically if they don't exist
REPOS_DIR=./repos
BUILDS_DIR=./builds

# --------------------------------------------
# AWS S3 / STORAGE CONFIGURATION (Production)
# --------------------------------------------
# Get from AWS IAM: https://console.aws.amazon.com/iam/
# Or use MinIO for self-hosted S3-compatible storage
S3_BUCKET=your-s3-bucket
S3_REGION=us-east-1
S3_ACCESS_KEY_ID=your-access-key
S3_SECRET_ACCESS_KEY=your-secret-key

# --------------------------------------------
# CLOUDFLARE CONFIGURATION (Production)
# --------------------------------------------
# Get API Token: Cloudflare Dashboard → My Profile → API Tokens
# Create token with Zone:DNS:Edit permissions
CLOUDFLARE_API_TOKEN=your-cloudflare-token

# Find in: Cloudflare Dashboard → Your Domain → Zone ID (right sidebar)
CLOUDFLARE_ZONE_ID=your-zone-id

# --------------------------------------------
# MONITORING (OPTIONAL)
# --------------------------------------------
# Prometheus metrics endpoint
PROMETHEUS_PORT=9090

# Grafana dashboard URL
GRAFANA_URL=http://localhost:3000